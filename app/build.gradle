apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "net.wepla.campus_planet"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    kapt {
        generateStubs = true
    }
    buildTypes {

        debug {
            buildConfigField "String", "API_KEY", "\"LuZx2AlKHPVeBivHSkzltQYr9cGBmIKD\""
            buildConfigField "String", "BASE_URL", "\"https://api-dev.campusplanet.link\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "API_KEY", "\"LuZx2AlKHPVeBivHSkzltQYr9cGBmIKD\""
            buildConfigField "String", "BASE_URL", "\"https://api-dev.campusplanet.link\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        // Return compile configuration objects of a variant.
        variant.getCompileConfiguration().resolutionStrategy {
            // Use Gradle's ResolutionStrategy API
            // to customize how this variant resolves dependencies.

        }
        // Return runtime configuration objects of a variant.
        variant.getRuntimeConfiguration().resolutionStrategy {

        }
        // Return annotation processor configuration of a variant.
        variant.getAnnotationProcessorConfiguration().resolutionStrategy {

        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha02'

    //multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    // dependency injection
    api 'com.google.dagger:dagger-android:2.21'
    api('com.google.dagger:dagger-android-support:2.21')
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'

    //network
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'

    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //view model
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha03'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0-alpha03'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //timber
    implementation 'com.jakewharton.timber:timber:4.5.1'

    //views
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
}
